
topRule  = "startprogram", "startblok", varsBlok, ";", operators, "endblok";
varsBlok  = "variable", "longint",  identifier,  [{ commaAndIdentifier }];
identifier  =  low_letter,  { low_letter | number } {11};
commaAndIdentifier  = ",",  identifier;
codeBlok  =  "startblok", write  |  read  |  assignment  |  ifStatement   |  goto_statement  |   labelRule   |  forToOrDownToDoRule  |  while   |  repeatUntil, "endblok";
operators = write  |  read  |  assignment  |  ifStatement   |  goto_statement  |   labelRule   |  forToOrDownToDoRule  |  while   |  repeatUntil;
read  = "read", "(",  identifier,  ")";
write  = "write", "(",  equation |  stringRule, ")";
assignment  =  identifier,  "==>",  equation;
cycle_counter = identifier;
cycle_counter_last_value = equation;
ifStatement  = "if", "(",  equation,  ")",  codeBlok,  ["else",  codeBlok];
goto_statement  =  "goto",  ident ;
labelRule  =  identifier, ":";
forToOrDownToDoRule  =  "for",  cycle_counter, "==>",  equation , "to" | "downto",  cycle_counter_last_value,  "do",  codeBlok;
whileRule = "while", condition, [statements], [ "continue while" ], [statements], [ "exit while" ], [statements], "end while";
repeatUntil  = "repeat",  operators, "until", "(", equation, ")";
equation  =  signedNumber  |  identifier  |   notRule  [{  operationAndIdentOrNumber  |  equation  }];
notRule   =  notOperation,   signedNumber  |  identifier  |  equation;
operationAndIdentOrNumber  =  mult  |  arithmetic  |  logic  |  compare   signedNumber  |  identifier  |  equation;
arithmetic  = "add" | "sub";
mult  = "*" | "/" | "%";
logic  = "&" | "|";
notOperation  = "!";
compare  = "==" | "<>" | "<<" | ">>";
comment  =  "LComment",   text;
LComment  =  "@@";
text = {  low_letter  |  up_letter  |  number  };
signedNumber 	= [ sign ]  digit [{digit}];
sign = "+" | "-";
low_letter = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z";
up_letter = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z";
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
